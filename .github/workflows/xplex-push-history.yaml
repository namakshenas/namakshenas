name: xplex-push-history

on:
  schedule:
    # Runs every Friday at 00:00 UTC
    - cron: '0 0 * * 5'
  workflow_dispatch: # Allow manual trigger for testing

jobs:
  update-timeline:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout profile repo
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Generate xplex push timeline
      run: |
        # Fetch commit history from xplex repository (last 30 days)
        echo "Fetching xplex commit history..."
        
        # Get commits from the last 30 days with dates
        curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository_owner }}/xplex/commits?since=$(date -d '30 days ago' --iso-8601)&per_page=100" \
          | jq -r '.[] | "\(.commit.author.date | split("T")[0])"' \
          | sort | uniq -c | awk '{print $2 " " $1}' > push_data.txt
        
        # Generate Mermaid xychart
        echo "Generating Mermaid chart..."
        
        # Start building the chart
        cat > chart.md << 'EOF'

<!-- XPLEX-PUSH-HISTORY-START -->
## ðŸ“Š Xplex Push History (Last 30 Days)

```mermaid
%%{init: {'theme': 'dark', 'themeVariables': { 'xyChart': {'width': 900, 'height': 400}}}}%%
xychart-beta
    title "Xplex Repository Push Activity"
    x-axis [
EOF
        
        # Add dates to x-axis
        if [ -s push_data.txt ]; then
          dates=$(cat push_data.txt | cut -d' ' -f1 | sed 's/^/"/' | sed 's/$/"/' | tr '\n' ',' | sed 's/,$//')
          echo "        $dates" >> chart.md
        else
          # Default to last 7 days if no data
          for i in {6..0}; do
            date -d "$i days ago" '+"%Y-%m-%d"' >> dates.txt
          done
          dates=$(cat dates.txt | tr '\n' ',' | sed 's/,$//')
          echo "        $dates" >> chart.md
          rm -f dates.txt
        fi
        
        echo '    ]' >> chart.md
        echo '    y-axis "Number of Pushes" 0 --> 10' >> chart.md
        echo '    bar [' >> chart.md
        
        # Add push counts
        if [ -s push_data.txt ]; then
          counts=$(cat push_data.txt | cut -d' ' -f2 | tr '\n' ',' | sed 's/,$//')
          echo "        $counts" >> chart.md
        else
          # Default to zeros if no data
          echo "        0, 0, 0, 0, 0, 0, 0" >> chart.md
        fi
        
        echo '    ]' >> chart.md
        echo '```' >> chart.md
        echo "" >> chart.md
        echo "*Last updated: $(date '+%Y-%m-%d %H:%M UTC')*" >> chart.md
        echo "<!-- XPLEX-PUSH-HISTORY-END -->" >> chart.md
        
        # Clean up
        rm -f push_data.txt
        
    - name: Update README.md
      run: |
        # Check if markers exist in README
        if grep -q "<!-- XPLEX-PUSH-HISTORY-START -->" README.md; then
          echo "Updating existing chart in README..."
          # Replace content between markers
          sed -i '/<!-- XPLEX-PUSH-HISTORY-START -->/,/<!-- XPLEX-PUSH-HISTORY-END -->/d' README.md
          cat chart.md >> README.md
        else
          echo "Adding chart to end of README..."
          # Add to end of file
          echo "" >> README.md
          cat chart.md >> README.md
        fi
        
        rm -f chart.md
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are changes
        if git diff --quiet; then
          echo "No changes to commit"
        else
          git add README.md
          git commit -m "Update xplex push history chart [skip ci]"
          git push
        fi
